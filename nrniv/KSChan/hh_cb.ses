{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[4]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ChannelBuild[0] managed KSChan[0]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("na", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("nahh", 1, 1, 5, "na")}
{genprop.set_defstr(0.12, 0)}
{genprop.set_single(0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(3)}
{tobj.set_state("m", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
0.1
-40
{tobj.transitions.object(0).set_f(0, 3, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
4
-0.0555556
-65
{tobj.transitions.object(0).set_f(1, 2, tobj1)}
{tobj.end_restore()}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(1)}
{tobj.set_state("h", 1, 140, 110)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.07
-0.05
-65
{tobj.transitions.object(0).set_f(0, 2, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
-0.1
-35
{tobj.transitions.object(0).set_f(1, 4, tobj1)}
{tobj.end_restore()}
end_restore()
{object_pop()}
{
ocbox_.map("ChannelBuild[0] managed KSChan[0]", 12, 101, 266.88, 212.16)
}
objref ocbox_
//End ChannelBuild[0] managed KSChan[0]


//Begin ChannelBuild[1] managed KSChan[1]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("k", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("khh", 1, 1, 6, "k")}
{genprop.set_defstr(0.036, 0)}
{genprop.set_single(0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(4)}
{tobj.set_state("n", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.1
0.1
-55
{tobj.transitions.object(0).set_f(0, 3, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.125
-0.0125
-65
{tobj.transitions.object(0).set_f(1, 2, tobj1)}
{tobj.end_restore()}
end_restore()
{object_pop()}
{
ocbox_.map("ChannelBuild[1] managed KSChan[1]", 12, 353, 267.84, 210.24)
}
objref ocbox_
//End ChannelBuild[1] managed KSChan[1]


//Begin ChannelBuild[2] managed KSChan[2]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("leak", 1, 1, -1, "NonSpecific")}
{genprop.set_defstr(0.0003, -54.3)}
{genprop.set_single(0)}
end_restore()
{object_pop()}
{
ocbox_.map("ChannelBuild[2] managed KSChan[2]", 14, 602, 305.28, 204.48)
}
objref ocbox_
//End ChannelBuild[2] managed KSChan[2]


//Begin SingleCompartment
{
load_file("single.hoc")
}
ocbox_ = new SingleCompartment(0)
ocbox_.inserter = new Inserter(0)
{object_push(ocbox_.inserter)}
{
mt.select("nahh") i = mt.selected()
ms[i] = new MechanismStandard("nahh")
ms[i].set("gmax_nahh", 0.12, 0)
mstate[i]= 1
maction(i)
mt.select("khh") i = mt.selected()
ms[i] = new MechanismStandard("khh")
ms[i].set("gmax_khh", 0.036, 0)
mstate[i]= 1
maction(i)
mt.select("leak") i = mt.selected()
ms[i] = new MechanismStandard("leak")
ms[i].set("gmax_leak", 0.0003, 0)
ms[i].set("e_leak", -54.3, 0)
mstate[i]= 1
maction(i)
}
{object_pop() doNotify()}
{object_push(ocbox_)}
{inserter.v1.map()}
{endbox()}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.vbox
ocbox_.map("SingleCompartment", 397, 20, 91.2, 152.64)
}
objref ocbox_
//End SingleCompartment


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 0.5, 0)
ms[i].set("dur", 0.1, 0)
ms[i].set("amp", 0.3, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 681, 306, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 5
xvalue("t","t", 2 )
tstop = 5
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(381,211)
}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 5, 120, 734, 40, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
