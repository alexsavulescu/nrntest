{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ChannelBuild[0] managed KSChan[0]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("na", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("nahh", 1, 1, 5, "na")}
{genprop.set_defstr(0.12, 0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(3)}
{tobj.set_state("m", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(100)  for (i=0; i < 100; i += 1) tobj1.x[i] = fscan() }
0.0746294
0.0830727
0.0923893
0.102657
0.113956
0.126376
0.140005
0.154941
0.171283
0.189135
0.208605
0.229803
0.252842
0.277838
0.304905
0.33416
0.365719
0.399695
0.436199
0.475339
0.517215
0.561926
0.609558
0.660193
0.713903
0.770747
0.830777
0.89403
0.960533
1.0303
1.10333
1.17961
1.25913
1.34183
1.42768
1.51661
1.60855
1.70343
1.80115
1.90163
2.00475
2.11042
2.21852
2.32895
2.44157
2.55629
2.67298
2.79153
2.91182
3.03374
3.15719
3.28206
3.40825
3.53566
3.66421
3.7938
3.92435
4.05578
4.18803
4.32102
4.45469
4.58898
4.72383
4.8592
4.99503
5.13128
5.26792
5.4049
5.5422
5.67978
5.81761
5.95568
6.09394
6.2324
6.37102
6.50979
6.64869
6.78771
6.92684
7.06607
7.20538
7.34477
7.48422
7.62374
7.76331
7.90293
8.04259
8.18229
8.32203
8.46179
8.60158
8.7414
8.88124
9.02109
9.16096
9.30085
9.44075
9.58066
9.72058
9.86051
{tobj.transitions.object(0).set_f(0, 7, tobj1, -80, 58.6)}
{tobj1 = new Vector(100)  for (i=0; i < 100; i += 1) tobj1.x[i] = fscan() }
9.20397
8.51523
7.87803
7.28851
6.74311
6.23852
5.77168
5.33979
4.94021
4.57053
4.22851
3.91209
3.61935
3.34851
3.09794
2.86612
2.65164
2.45322
2.26964
2.09981
1.94268
1.7973
1.66281
1.53838
1.42326
1.31676
1.21823
1.12707
1.04273
0.964699
0.89251
0.825723
0.763934
0.706768
0.65388
0.60495
0.559681
0.5178
0.479053
0.443205
0.41004
0.379356
0.350969
0.324705
0.300408
0.277928
0.25713
0.237889
0.220088
0.203618
0.188382
0.174285
0.161243
0.149177
0.138014
0.127686
0.118132
0.109292
0.101113
0.093547
0.0865468
0.0800705
0.0740788
0.0685354
0.0634069
0.0586621
0.0542724
0.0502111
0.0464538
0.0429776
0.0397616
0.0367862
0.0340335
0.0314867
0.0291306
0.0269507
0.024934
0.0230681
0.0213419
0.0197449
0.0182674
0.0169004
0.0156358
0.0144657
0.0133833
0.0123818
0.0114552
0.010598
0.00980498
0.00907127
0.00839246
0.00776445
0.00718343
0.00664589
0.00614857
0.00568847
0.0052628
0.00486898
0.00450463
0.00416755
{tobj.transitions.object(0).set_f(1, 7, tobj1, -80, 58.6)}
{tobj.end_restore()}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(1)}
{tobj.set_state("h", 1, 140, 110)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(100)  for (i=0; i < 100; i += 1) tobj1.x[i] = fscan() }
0.14819
0.138171
0.12883
0.12012
0.112
0.104428
0.0973678
0.0907851
0.0846475
0.0789248
0.073589
0.0686139
0.0639752
0.0596501
0.0556174
0.0518573
0.0483514
0.0450826
0.0420347
0.0391929
0.0365432
0.0340727
0.0317691
0.0296213
0.0276188
0.0257516
0.0240106
0.0223873
0.0208738
0.0194626
0.0181468
0.01692
0.0157761
0.0147095
0.0137151
0.0127878
0.0119233
0.0111172
0.0103656
0.00966485
0.00901144
0.00840221
0.00783417
0.00730453
0.0068107
0.00635026
0.00592094
0.00552065
0.00514742
0.00479942
0.00447495
0.00417242
0.00389033
0.00362732
0.00338209
0.00315344
0.00294025
0.00274147
0.00255613
0.00238332
0.00222219
0.00207196
0.00193188
0.00180128
0.0016795
0.00156595
0.00146009
0.00136137
0.00126934
0.00118352
0.00110351
0.00102891
0.000959345
0.000894487
0.000834014
0.00077763
0.000725057
0.000676039
0.000630334
0.00058772
0.000547986
0.000510939
0.000476397
0.000444189
0.000414159
0.00038616
0.000360053
0.000335711
0.000313015
0.000291853
0.000272122
0.000253725
0.000236572
0.000220578
0.000205665
0.000191761
0.000178797
0.000166709
0.000155439
0.00014493
{tobj.transitions.object(0).set_f(0, 7, tobj1, -80, 58.6)}
{tobj1 = new Vector(100)  for (i=0; i < 100; i += 1) tobj1.x[i] = fscan() }
0.0109869
0.0126172
0.0144857
0.0166264
0.0190772
0.0218813
0.025087
0.0287485
0.0329264
0.0376879
0.0431073
0.049266
0.0562529
0.0641639
0.0731012
0.0831727
0.0944904
0.107168
0.121319
0.137051
0.154465
0.173647
0.194662
0.21755
0.24232
0.268941
0.297339
0.327393
0.358933
0.391741
0.425557
0.460085
0.495
0.529964
0.564636
0.598688
0.631812
0.663739
0.694236
0.723122
0.75026
0.775564
0.798991
0.820538
0.840238
0.858149
0.874352
0.888944
0.902031
0.913726
0.924142
0.933392
0.941585
0.948826
0.955212
0.960834
0.965776
0.970113
0.973916
0.977246
0.98016
0.982707
0.984932
0.986875
0.98857
0.990048
0.991337
0.99246
0.993439
0.994291
0.995033
0.995679
0.996242
0.996731
0.997157
0.997527
0.99785
0.99813
0.998374
0.998586
0.998771
0.998931
0.999071
0.999192
0.999297
0.999389
0.999469
0.999538
0.999599
0.999651
0.999697
0.999736
0.999771
0.999801
0.999827
0.999849
0.999869
0.999886
0.999901
0.999914
{tobj.transitions.object(0).set_f(1, 7, tobj1, -80, 58.6)}
{tobj.end_restore()}
end_restore()
{genprop.set_single(0)}
{set_alias(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[0] managed KSChan[0]", 12, 101, 266.88, 212.16)
}
objref ocbox_
//End ChannelBuild[0] managed KSChan[0]


//Begin ChannelBuild[1] managed KSChan[1]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ion_register("k", 1)}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("khh", 1, 1, 6, "k")}
{genprop.set_defstr(0.036, 0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(4)}
{tobj.set_state("n", 1, 140, 140)}
{tobj.set_trans(0, 0, 0)}
{tobj.transitions.object(0).settype(0, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.1
0.1
-55
{tobj.transitions.object(0).set_f(0, 3, tobj1)}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
0.125
-0.0125
-65
{tobj.transitions.object(0).set_f(1, 2, tobj1)}
{tobj.end_restore()}
end_restore()
{genprop.set_single(0)}
{set_alias(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[1] managed KSChan[1]", 12, 353, 267.84, 210.24)
}
objref ocbox_
//End ChannelBuild[1] managed KSChan[1]


//Begin ChannelBuild[2] managed KSChan[2]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ocbox_ = new ChannelBuild(1)}
{object_push(ocbox_)}
{genprop.set_data("leak", 1, 1, -1, "NonSpecific")}
{genprop.set_defstr(0.0003, -54.3)}
end_restore()
{genprop.set_single(0)}
{set_alias(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[2] managed KSChan[2]", 14, 602, 305.28, 204.48)
}
objref ocbox_
//End ChannelBuild[2] managed KSChan[2]


//Begin SingleCompartment
{
load_file("single.hoc")
}
ocbox_ = new SingleCompartment(0)
ocbox_.inserter = new Inserter(0)
{object_push(ocbox_.inserter)}
{
mt.select("nahh") i = mt.selected()
ms[i] = new MechanismStandard("nahh")
ms[i].set("gmax_nahh", 0.12, 0)
mstate[i]= 1
maction(i)
mt.select("khh") i = mt.selected()
ms[i] = new MechanismStandard("khh")
ms[i].set("gmax_khh", 0.036, 0)
mstate[i]= 1
maction(i)
mt.select("leak") i = mt.selected()
ms[i] = new MechanismStandard("leak")
ms[i].set("gmax_leak", 0.0003, 0)
ms[i].set("e_leak", -54.3, 0)
mstate[i]= 1
maction(i)
}
{object_pop() doNotify()}
{object_push(ocbox_)}
{inserter.v1.map()}
{endbox()}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.vbox
ocbox_.map("SingleCompartment", 397, 20, 91.2, 152.64)
}
objref ocbox_
//End SingleCompartment


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 0.5, 0)
ms[i].set("dur", 0.1, 0)
ms[i].set("amp", 0.3, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 681, 306, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 5
xvalue("t","t", 2 )
tstop = 5
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0.00999999
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(381,211)
}
{
save_window_ = new Graph(0)
save_window_.size(0,5,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 5, 120, 734, 40, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
