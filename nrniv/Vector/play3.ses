{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin LinearCircuit[0]
{
load_file("lincir.hoc", "LinearCircuit")
}
{
ocbox_ = new LinearCircuit(1)
}
{object_push(ocbox_)}
{mkelm(1, 190, 125, 2.5, -1.5708)}
1
{mklabel(0, "rm", 16.191, 4.89)}
{mklabel(1, "Vi", 3.724, 9.62)}
{mklabel(2, "Vo", 12.355, 2.078)}
{mkelm(2, 150, 125, 2.5, -1.5708)}
1
{mklabel(0, "cm", -21.49, 3.931)}
{mkelm(1, 190, 75, 2.5, -1.5708)}
1
{mklabel(0, "rs", 19.068, -3.611)}
{mkelm(0, 170, 100, 2, 0)}
{mkelm(0, 170, 150, 2, 0)}
{mkelm(5, 190, 30, 2, 0)}
{mkelm(4, 130, 150, 2, 0)}
{mklabel(0, "I", 0.428, 19.21)}
{sel.extra_info.restore()}
3
1e+09 0
1e+09 0
1e+09 0
{sel.extra_info.set_xtrn(1)}
{mkelm(5, 110, 130, 2, 0)}
{parasitic_ = 0  noconsist_ = 0}
{graphlist.append(new LincirGraph(this, 1))}
2
Vo (mV)
1 1 0.8 0.9 2
Vi (mV)
2 1 0.8 0.9 2
0 10 -2.98023e-08 3 // graph size
842 343 308.16 261.12 // box size
// end info
{g.exec_menu("Simulate")  tool(2)}
{sel = nil}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[2] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.label(206.191, 129.89, "rm", 1, 1, 0.5, 0.5, 1)
save_window_.label(193.724, 159.62, "Vi", 1, 1, 0.5, 0.5, 1)
save_window_.label(202.355, 102.078, "Vo", 1, 1, 0.5, 0.5, 1)
save_window_.label(128.51, 128.931, "cm", 1, 1, 0.5, 0.5, 1)
save_window_.label(209.068, 71.389, "rs", 1, 1, 0.5, 0.5, 1)
save_window_.label(130.428, 169.21, "I", 1, 1, 0.5, 0.5, 1)
}
ocbox_.map("LinearCircuit[0]", 373, 26, 519.36, 284.16)
}
objref ocbox_
//End LinearCircuit[0]


//Begin MakeCurve[0]
{
load_file("mkcurve.hoc", "MakeCurve")
}
{
ocbox_=new MakeCurve(1)
}
{object_push(ocbox_)}
{honly_=0 vonly_=0 hres_=1 vres_=1 res()}
{vx.resize(12) vy.resize(12)}
for i=0,11 { vx.x[i]=fscan() vy.x[i]=fscan()}
0 0
1 0
1 1
2 1
2 0
3 0
4 1
5 0
6 0
6 1
7 2
7 1
{draw() object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,10,0,2)
scene_vector_[4] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
}
ocbox_.map("MakeCurve[0]", 373, 340, 432, 239.04)
}
objref ocbox_
//End MakeCurve[0]


//Begin VectorPlay[0]
{
load_file("vplay.hoc")
}
{
ocbox_=new VectorPlay(1)
}
{object_push(ocbox_)}
vy = new Vector(12)
vx = new Vector(12)
for i=0,11 { vx.x[i]=fscan() vy.x[i]=fscan()}
0 0
1 0
1 1
2 1
2 0
3 0
4 1
5 0
6 0
6 1
7 2
7 1
{vy.plot(g, vx)}
{sname = "LinearCircuit[0].I"  have_name = 1  contin = 1 con1(1)}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,10,0,2)
scene_vector_[5] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
}
ocbox_ = ocbox_.b
ocbox_.map("VectorPlay[0]", 371, 619, 347.52, 264.96)
}
objref ocbox_
//End VectorPlay[0]

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 10
xvalue("t","t", 2 )
tstop = 10
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.00999999
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(71,90)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.001  CVode[0].atol(atol_)
restore(412, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 68, 498, 272.64, 113.28)
}
objref ocbox_
//End VariableTimeStep

objectvar scene_vector_[1]
{doNotify()}
