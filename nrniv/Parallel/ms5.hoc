// use -np 6
{load_file("nrngui.hoc")}
{load_file("ms5.ses")}

objref pc
pc = new ParallelContext()
{load_file("msout.hoc")}

// test groups are
objref groups, sids
{
groups = new List()
for i=0, 5 groups.append(new Vector())
groups.object(0).append(0,10,11)
groups.object(1).append(1,3,4)
groups.object(2).append(2,5,6)
groups.object(3).append(7,8,9)
groups.object(4).append(12)
groups.object(5).append(13,14,15)
sids = new Vector() // quaduples of sid, section index, connection value, short
sids.append(0,0,0,2, 1,0,1,2, 0,1,0,2, 0,2,0,2, 1,7,0,2, 1,12,0,2, \
	2,12,1,2, 2,13,0,2)
}

proc split() {local i, j  localobj g
	for i=0, groups.count-1 if (pc.id != i) {
		g = groups.object(i)
		for j=0, g.size-1 {
			a[g.x[j]] {
				delete_section()
			}
		}
	}
	for (i=0; i < sids.size-1; i += 4) {
		if (section_exists("a", sids.x[i+1])) a[sids.x[i+1]] {
			pc.multisplit(sids.x[i+2], sids.x[i], 2)
//printf("%d %s multisplit(%g, %d)\n", pc.id, secname(), sids.x[i+2], sids.x[i])
		}
	}
}
if (pc.nhost > 1) {split()}
record_all()

if (pc.nhost > 1) {pc.multisplit()}
//pc.multisplit(0,1001)
run()
precord_all("%g")

{pc.runworker()}
{pc.done()}
quit()

