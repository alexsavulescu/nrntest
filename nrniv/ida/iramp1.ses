{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin LinearCircuit[0]
{
load_file("lincir.hoc", "LinearCircuit")
}
{
ocbox_ = new LinearCircuit(1)
}
{object_push(ocbox_)}
{version(2)}
{mkelm(1, 180, 75, 2.5, -1.5708)}
1
{mklabel(0, "R", 22.355, 2.1432)}
{mklabel(1, "V2", 19.478, 2.078)}
{mkelm(6, 180, 30, 2, 0)}
{mkelm(2, 180, 130, 3, -1.5708)}
1
{mklabel(0, "C", 27.15, 2.767)}
{mklabel(1, "V1", 17.56, 1.538)}
{mkelm(5, 150, 160, 3, 0)}
{mklabel(0, "I", -0.392, 24.554)}
{sel.extra_info.restore()}
3
1 0
1 1
1e+09 0
{sel.extra_info.set_xtrn(1)}
{mkelm(6, 120, 140, 2, 0)}
{parasitic_ = 0  noconsist_ = 0}
{graphlist.append(new LincirGraph(this, 1))}
2
V1 (mV)
2 1 0.8 0.9 2
V2 (mV)
1 1 0.8 0.9 2
0 5 0 2 // graph size
726 399 308.16 261.12 // box size
// end info
{g.exec_menu("Simulate")  tool(2)}
{sel = nil}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[2] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.label(202.355, 77.1432, "R", 1, 1, 0.5, 0.5, 1)
save_window_.label(199.478, 102.078, "V2", 1, 1, 0.5, 0.5, 1)
save_window_.label(207.15, 132.767, "C", 1, 1, 0.5, 0.5, 1)
save_window_.label(197.56, 161.538, "V1", 1, 1, 0.5, 0.5, 1)
save_window_.label(149.608, 184.554, "I", 1, 1, 0.5, 0.5, 1)
}
ocbox_.map("LinearCircuit[0]", 552, 45, 519.36, 284.16)
}
objref ocbox_
//End LinearCircuit[0]

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 5
xvalue("t","t", 2 )
tstop = 5
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 100
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(242,165)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.001  CVode[0].atol(atol_)
restore(412, 1)
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 256, 574, 272.64, 113.28)
}
objref ocbox_
//End VariableTimeStep


//Begin MakeCurve[0]
{
load_file("mkcurve.hoc", "MakeCurve")
}
{
ocbox_=new MakeCurve(1)
}
{object_push(ocbox_)}
{honly_=0 vonly_=0 hres_=0.1 vres_=0.01 res()}
{vx.resize(6) vy.resize(6)}
for i=0,5 { vx.x[i]=fscan() vy.x[i]=fscan()}
0 0
1 0
1 0.5
2 1
2 0
5 0
{draw() object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,10,0,1)
scene_vector_[4] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
}
ocbox_.map("MakeCurve[0]", 1113, 71, 432, 227.52)
}
objref ocbox_
//End MakeCurve[0]


//Begin VectorPlay[0]
{
load_file("vplay.hoc")
}
{
ocbox_=new VectorPlay(1)
}
{object_push(ocbox_)}
vy = new Vector(6)
vx = new Vector(6)
for i=0,5 { vx.x[i]=fscan() vy.x[i]=fscan()}
0 0
1 0
1 0.5
2 1
2 0
5 0
{vy.plot(g, vx)}
{sname = "LinearCircuit[0].I"  have_name = 1  contin = 1 con1(1)}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[5] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
}
ocbox_ = ocbox_.b
ocbox_.map("VectorPlay[0]", 1104, 390, 411.84, 264.96)
}
objref ocbox_
//End VectorPlay[0]

objectvar scene_vector_[1]
{doNotify()}
