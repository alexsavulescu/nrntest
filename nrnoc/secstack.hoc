// test for section stack problems using continue, break, and return.

create a[101]
access a[0]

proc test1() { local i
	print "test1"
	for i=0, 100 a[i] {
		if (i == 90) {
			return
		}
	}
}
{test1() print secname() }

func test2() { local i
	print "test2"
	for i=0, 100 a[i] {
		if (i == 90) {
			a[30] return 5
		}
	}
}
print test2(), " ", secname()

proc test3() { local i
	print "test3"
	for i=0, 100 a[i] {
		if (i == 90) {
			print secname()
			break
		}
	}
	print secname()
}
{test3() print secname() }

proc test4() { local i
	print "test4"
	for i=1, 5 a[i] {
		print secname()
		continue
	}
	print secname()
}
{test4() print secname() }

create a[5]
access a[0]

proc test5() {
	print "test5"
	forall {
		print secname()
		continue
	}
	print secname()
}
{test5() print secname() }

proc test6() {
	print "test6"
	forall {
		print secname()
		ifsec "a[3]" { return }
	}
	print secname()
}
{test6() print secname() }

proc test7() {
	print "test7"
	forall {
		print secname()
		ifsec "a[3]" { break }
	}
	print secname()
}
{test7() print secname() }


proc test8() { local i
	print "test8"
	for (i=1; i < 3; i += 1) a[i] {
		if (i == 2) {
			print secname()
			a[1] { print secname() return }
		}
	}
}
{test8() print secname() }

proc test9() { local i
	print "test9"
	for (i=1; i < 5; i += 1) a[i] {
		print secname()
		if (i == 2) {
			a[0] { print secname() continue }
		}
		print secname()
	}
}
{test9() print secname() }

proc test10() { local i
	print "test10"
	a[3].v(.5) = 10
	forall for (x) if (x > 0 && x < 1) {
		if (v(x) == 10) {
			print secname(), v(x)  continue
		}
		print secname()
	}
}
{test10() print secname() }

proc test11() { local i
	print "test11"
	a[3].v(.5) = 11
	forall for (x) if (x > 0 && x < 1) {
		if (v(x) == 11) {
			print secname(), v(x)  return
		}
		print secname()
	}
}
{test11() print secname() }

create b

proc test12() { local i
	print "test12"
	a[3].v(.5) = 12
	b forsec "a" for (x) if (x > 0 && x < 1) {
		if (v(x) == 12) {
			print secname(), v(x)  return
		}
		print secname()
	}
}
{test12() print secname() }

objref o
o = new Vector()

proc test13() {
	print "test13"
	forall {
		print secname()
		o.size continue
	}
	print secname()
}
{test13() print secname() }

proc test14() {
	print "test14"
	forall {
		print secname()
		o.size break
	}
	print secname()
}
{test14() print secname() }

iterator loop() { local i
	for i=1, 3 a[i] {
		iterator_statement
	}
}
print "test15"
for loop() {
	print secname()
}
print secname()

print "test16"
for loop() {
	print secname()
	ifsec "a[1]" continue
	print secname()
}
print secname()

print "test17"
for loop() {
	print secname()
	ifsec "a[1]" break
	print secname()
}
print secname()
